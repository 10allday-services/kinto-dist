version: '3'

services:
  db:
    image: postgres:9.6
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis:
    image: redis:5.0.4

  autograph:
    image: mozilla/autograph:2.7.0
    volumes:
      - ${PWD}/autograph/autograph.yaml:/app/autograph.yaml

  megaphone:
    image: mozilla/megaphone:0.1.5
    depends_on:
      - mysql
    environment:
      ROCKET_DATABASE_URL: mysql://megaphone-user:megaphone-pass@mysql/megaphone
      ROCKET_BROADCASTER_AUTH: "{kinto-dist-test=[token1]}"
      ROCKET_READER_AUTH: "{reader=[token2]}"
      ROCKET_LOG: normal
      RUST_BACKTRACE: 1
    ports:
      - "5555:8000"

  mysql:
    image: mysql:5.7.25
    environment:
      MYSQL_ROOT_PASSWORD: mysql-root-pass
      MYSQL_DATABASE: megaphone
      MYSQL_USER: megaphone-user
      MYSQL_PASSWORD: megaphone-pass

  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: kinto:build
    depends_on:
      - db
      - redis
      - autograph
      - megaphone
    environment:
      - KINTO_CACHE_BACKEND=kinto_redis.cache
      - KINTO_CACHE_URL=redis://redis:6379/2
      - KINTO_STORAGE_URL=postgres://postgres@db/postgres
      - KINTO_PERMISSION_URL=postgres://postgres@db/postgres
      - KINTO_SIGNER_AUTOGRAPH_SERVER_URL=http://autograph:8000
      # - Megaphone is configured in config/example.ini (see event_listeners)
    ports:
      - "8888:8888"
    volumes:
      - $PWD:/app
    command: uwsgistart

  tests:
    build:
      context: .
      dockerfile: tests/Dockerfile
    image: kinto:tests
    depends_on:
      - web
    environment:
      - SERVER=http://web:8888/v1
    volumes:
      - $PWD/tests:/app
      - $PWD/mail:/app/mail/
    command: start
