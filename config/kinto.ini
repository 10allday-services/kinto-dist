[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8888


[app:main]
use = egg:kinto

#
# Features
#
# kinto.readonly = false
# kinto.paginate_by = 0
# kinto.experimental_collection_schema_validation = true
# kinto.trailing_slash_redirect_enabled = true
# kinto.batch_max_requests = 25
# kinto.flush_endpoint_enabled = false

#
# Production settings
#
# http://kinto.readthedocs.org/en/latest/configuration/production.html
#
# kinto.http_scheme = https
# kinto.http_host = kinto.services.mozilla.com

# kinto.statsd_url = udp://localhost:8125
# kinto.statsd_prefix = kinto-prod

# kinto.retry_after_seconds = 5
# kinto.backoff = 10
# kinto.eos =


#
# Backends.
#
# http://kinto.readthedocs.org/en/latest/configuration/settings.html#storage
#
kinto.storage_backend = cliquet.storage.postgresql
kinto.storage_url = postgres://user:pass@localhost/dbname
# kinto.storage_pool_size = 25
# kinto.storage_max_overflow = 5
# kinto.storage_pool_recycle = -1
# kinto.storage_pool_timeout = 30
# kinto.storage_max_backlog = -1

kinto.cache_backend = cliquet.cache.postgresql
kinto.cache_url = postgres://user:pass@localhost/dbname
# kinto.cache_pool_size = 25
# kinto.cache_max_overflow = 5
# kinto.cache_pool_recycle = -1
# kinto.cache_pool_timeout = 30
# kinto.cache_max_backlog = -1

kinto.permission_backend = cliquet.permission.postgresql
kinto.permission_url = postgres://user:pass@localhost/dbname
# kinto.permission_pool_size = 25
# kinto.permission_max_overflow = 5
# kinto.permission_pool_recycle = -1
# kinto.permission_pool_timeout = 30
# kinto.permission_max_backlog = -1


#
# Auth configuration.
#
# http://kinto.readthedocs.org/en/latest/configuration/settings.html#authentication
#
kinto.userid_hmac_secret = b'58de20af8811f56f52d24a6862d13c163b0ea353b0e2f23ea34aaccbef174ec8'

# Firefox accounts
# multiauth.policies = fxa basicauth
# fxa-oauth.relier.enabled = false
# fxa-oauth.client_id = 89513028159972bc
# fxa-oauth.client_secret = 9aced230585cc0aaea0a3467dd800
# fxa-oauth.oauth_uri = https://oauth-stable.dev.lcip.org
# fxa-oauth.requested_scope = profile kinto
# fxa-oauth.required_scope = kinto
# fxa-oauth.webapp.authorized_domains = *.firefox.com
# fxa-oauth.cache_ttl_seconds = 300
# fxa-oauth.state.ttl_seconds = 3600


#
# Root permissions
#
# kinto.bucket_create_principals = system.Authenticated
# kinto.bucket_read_principals = system.Authenticated


#
# Client cache headers
#
# http://kinto.readthedocs.org/en/latest/configuration/settings.html#client-caching
#
# Every bucket objects objects and list
# kinto.bucket_cache_expires_seconds = 3600
#
# Every collection objects and list of every buckets
# kinto.collection_cache_expires_seconds = 3600
#
# Every group objects and list of every buckets
# kinto.group_cache_expires_seconds = 3600
#
# Every records objects and list of every collections
# kinto.record_cache_expires_seconds = 3600
#
# Records in a specific bucket
# kinto.blog_record_cache_expires_seconds = 3600
#
# Records in a specific collection in a specific bucket
# kinto.blog_article_record_cache_expires_seconds = 3600


#
# Plugins
#
kinto.includes = kinto.plugins.default_bucket
                 kinto_changes
                 kinto_attachment
                 kinto_admin

#
# Kinto changes
#
kinto.event_listeners = changes
kinto.event_listeners.changes.use = kinto_changes.listener
kinto.event_listeners.changes.collections = /buckets/blocklists
kinto.event_listeners.changes.bucket = monitor
kinto.event_listeners.changes.collection = changes
kinto.event_listeners.changes.principals = system.Everyone

#
# Kinto attachment
#
kinto.attachment.base_url = http://localhost:8000
kinto.attachment.folder = {bucket_id}/{collection_id}
# Either local filesystem:
kinto.attachment.base_path = /tmp
# or Amazon S3:
# kinto.attachment.aws.access_key = <AWS access key>
# kinto.attachment.aws.secret_key = <AWS secret key>
# kinto.attachment.aws.bucket = <AWS bucket name>
# kinto.attachment.aws.acl = public-read


# [uwsgi]
# wsgi-file = app.wsgi
# enable-threads = true
# socket = /var/run/uwsgi/kinto.sock
# chmod-socket = 666
# processes =  3
# master = true
# module = kinto
# harakiri = 120
# uid = kinto
# gid = kinto
# virtualenv = .venv
# lazy = true
# lazy-apps = true
# single-interpreter = true
# buffer-size = 65535
# post-buffering = 65535
# plugins = python

#
# Logging configuration
#
kinto.logging_renderer = cliquet.logs.MozillaHekaRenderer

[loggers]
keys = root, sentry

[handlers]
keys = console, sentry

[formatters]
keys = heka, sentry

[logger_root]
level = INFO
handlers = console, sentry
formatter = heka

[logger_sentry]
level = WARN
handlers = console
qualname = sentry.errors
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET

[handler_sentry]
class = raven.handlers.logging.SentryHandler
args = ('https://<key>:<secret>@app.getsentry.com/<project>',)
level = WARNING
formatter = generic

[formatter_heka]
format = %(message)s

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
